{"name": "test_loging[ssss-11111-Invalid login]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <allureReport.TestCase object at 0x0000016A5342CE10>, username = 'ssss', password = '11111'\nexp = 'Invalid login'\n\n    @pytest.mark.parametrize(\"username,password,exp\",[(\"www\",\"www\",\"Invalid login, please try again\"),(\"ssss\",\"11111\",\"Invalid login\"),(\"satwinder@123\",\"Satwinder@123\",\"Satwinder Singh\")])\n    def test_loging(self,username,password,exp):\n        driver=webdriver.Chrome()\n        driver.get(\"https://online.btes.co.in/login/index.php\")\n        driver.find_element(By.XPATH,\"//input[@id='username']\").send_keys(username)\n        driver.find_element(By.XPATH,\"//input[@id='password']\").send_keys(password)\n        driver.find_element(By.XPATH,\"//button[@id='loginbtn']\").click()\n        try:\n            if exp == \"Satwinder Singh\":\n                act = driver.find_element(By.XPATH, \"//*[@class='usertext mr-1']\").text\n            else:\n                act = driver.find_element(By.XPATH, \"//a[text()='Invalid login, please try again']\").text\n>           assert act==exp\nE           AssertionError: assert 'Invalid logi...ase try again' == 'Invalid login'\nE             \nE             - Invalid login\nE             + Invalid login, please try again\n\nallureReport.py:25: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <allureReport.TestCase object at 0x0000016A5342CE10>, username = 'ssss', password = '11111'\nexp = 'Invalid login'\n\n    @pytest.mark.parametrize(\"username,password,exp\",[(\"www\",\"www\",\"Invalid login, please try again\"),(\"ssss\",\"11111\",\"Invalid login\"),(\"satwinder@123\",\"Satwinder@123\",\"Satwinder Singh\")])\n    def test_loging(self,username,password,exp):\n        driver=webdriver.Chrome()\n        driver.get(\"https://online.btes.co.in/login/index.php\")\n        driver.find_element(By.XPATH,\"//input[@id='username']\").send_keys(username)\n        driver.find_element(By.XPATH,\"//input[@id='password']\").send_keys(password)\n        driver.find_element(By.XPATH,\"//button[@id='loginbtn']\").click()\n        try:\n            if exp == \"Satwinder Singh\":\n                act = driver.find_element(By.XPATH, \"//*[@class='usertext mr-1']\").text\n            else:\n                act = driver.find_element(By.XPATH, \"//a[text()='Invalid login, please try again']\").text\n            assert act==exp\n        except:\n            allure.attach(driver.get_screenshot_as_png(), name=\"testlogin\",attachment_type=AttachmentType.PNG)\n>           assert False\nE           assert False\n\nallureReport.py:28: AssertionError"}, "attachments": [{"name": "testlogin", "source": "ad618684-890a-4311-a1d1-1715eb79f375-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'ssss'"}, {"name": "password", "value": "'11111'"}, {"name": "exp", "value": "'Invalid login'"}], "start": 1737366465694, "stop": 1737366481208, "uuid": "bcf5060f-4711-4fcd-815a-799754323870", "historyId": "4cdec9aac801863e2e04d97ac837450a", "testCaseId": "afa662b2472d3f5290ca51cc6cca78cc", "fullName": "allureReport.TestCase#test_loging", "labels": [{"name": "severity", "value": "minor"}, {"name": "feature", "value": "login"}, {"name": "suite", "value": "allureReport"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "Satwinder"}, {"name": "thread", "value": "21612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allureReport"}]}